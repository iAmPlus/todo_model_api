#!/usr/bin/env python3

import argparse
import os
import sys

import yaml


# Allow override via environment
def merge_env(settings):
    return {key: os.environ.get(key, value) for key, value in settings.items()}


CONFIG_FILE = os.path.join(os.path.dirname(__file__),
                           '..', 'config/setup.yaml')

parser = argparse.ArgumentParser(description='read config from setup.yaml')
parser.add_argument('key', help='config key')
parser.add_argument('default', nargs='?', help='default value')
parser.add_argument('--setup', '-s', default=CONFIG_FILE, help='setup file')
parser.add_argument('--fallback', '-f', help='fallback key')
args = parser.parse_args()

if not os.path.exists(args.setup):
    print('setup file {} does not exist'.format(args.setup), file=sys.stderr)
    sys.exit(1)

with open(args.setup) as stream:
    config_settings = yaml.load(stream)
    config_settings = merge_env(config_settings)

if args.key in config_settings.keys():
    print(config_settings[args.key])
elif args.fallback in config_settings.keys():
    print(config_settings[args.fallback])
elif args.default:
    print(args.default)
else:
    print('NO VALUE..', file=sys.stderr)
    sys.exit(2)

sys.exit(0)
